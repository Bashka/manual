====== Описание ======
Хэш-таблица - это массив списков, элементы в которых сгруппированы по хэшу их значений.

===== Свойства =====
^ Свойство ^ Значение ^
|Повторение элементов|Возможно внутри списков|
|Упорядоченность элементов|Возможно внутри списков|
|Доступ к элементу|По текстовому ключу|

====== Реализация ======
===== Деление по модулю =====
{{ .:media:hashtable.png |Схема связей}}
Для реализации необходимо:
  * Определить массив достаточной длины, хранящий ссылки на однотипные списки;
  * Элемент массива (список), в который будет добавляться значение определяется путем вычисления остатка от деления целочисленного эквивалента этого значения на длину массива;
  * Получить ссылку на первый элемент массива.

==== Плюсы ====
  * Поиск по ключу
  * Изменение структуры списков
  * Изменение значения

==== Минусы ====
  * Поиск по значению
  * Изменение ключа
  * Изменение структуры массива
  * Потребление памяти

==== Операции ====
Получение элемента:
<code>
hash = toInt(key) % htsize
list = hashtable[hash]
elem = list
do
  if elem.key == key
    return elem.val
while elem = list.next
return null
</code>
где:
  * ''key'' - ключ целевого элемента;
  * ''htsize'' - размер хэш-таблицы;
  * ''hashtable'' - хэш-таблица.

Добавление элемента:
<code>
hash = toInt(elem.key) % htsize
list = hashtable[hash]
list.add(elem)
</code>
где:
  * ''elem'' - добавляемый элемент;
  * ''htsize'' - размер хэш-таблицы;
  * ''hashtable'' - хэш-таблица.

Удаление элемента:
<code>
hash = toInt(elem.key) % htsize
list = hashtable[hash]
list.remove(elem)
</code>
где:
  * ''elem'' - удаляемый элемент;
  * ''htsize'' - размер хэш-таблицы;
  * ''hashtable'' - хэш-таблица.

~~DISQUS~~
