====== Внешние ветки ======

Ветки в Git бывают двух типов:

  - Обычные ветки - изменяемые, локальные ветки, хранящие историю комитов локального репозитория
  - Внешние (удаленные) ветки - неизменяемые ветки, отражающие историю комитов удаленного репозитория (Git сервера)

Для отображения списка внешних веток, используется команда ''%%git branch -r%%''. Если же необходимо отобразить все ветки репозитория (обычные и внешние), используется команда ''%%git branch -a%%''.

Внешнюю ветку невозможно сделать текущей, как и изменить. Она только отслеживает состояние некоторой ветки на удаленном сервере.

====== Получение изменений ======

Для получения всех изменений (внешних веток) из удаленного сервера используется команда ''git fetch сервер''. Она обновляет историю внешних веток и добавляет новые, если их не было в локальном репозитории.

Если необходимо обновить конкретную ветку, используется команда ''git fetch сервер ветка''.

Важно помнить, что данная команда обновляет только внешние ветки, но так как их невозможно сделать текущими, то для работы с ними необходимо слить (merge) их в обычные ветки. Делается это следующим образом:

  - С помощью команды ''git fetch внешняяВетка'' загружаются последние изменения из внешней ветки
  - Командой ''git branch имя'' создается новая ветка, а с помощью команды ''git checkout ветка'' она делается текущей
  - Командой ''git merge внешняяВетка'' в текущую ветку загружаются изменения из внешней ветки

Команда имеет следующие ключи:

  * ''%%git fetch --all%%'' - получить изменения из всех удаленных серверов, зарегистрированных в репозитории
  * ''%%git fetch --dry-run ...%%'' - загрузка не выполняется, но утилита возвращает ту же информацию, что при нормальной работе («холостой ход»)
  * ''%%git fetch -t ...%%'' - загрузка маркерок (tags) из удаленного сервера
  * ''%%git fetch -q ...%%'' - загрузка без вывода сообщений ("тихий режим")
  * ''%%git fetch -v ...%%'' - подробное описание результатов загрузки
  * ''%%git fetch --progress ...%%'' - визуализация процесса загрузки

~~DISQUS~~
