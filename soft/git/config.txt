====== Файлы конфигураций ======

Git хранит настройки в следующих файлах:

  * ''/etc/gitconfig'' или ''GIT/gitconfig'' (где GIT это каталог, в котором установлен Git для ОС MS Windows) (''%%--system%%'') - глобальные настройки, применяемые для всех пользователей
  * ''$HOME/.gitconfig'' (''%%--global%%'') - пользовательские настройки, имеющие больший приоритет, чем глобальные, но распространяющиеся только на конкретного пользователя
  * ''.git/config'' (''%%--local%%'') - настройки репозитория, имеющие наибольший приоритет, но распространяющиеся только на конкретный репозиторий

Файлы конфигураций имеют следующую структуру:

  [раздел]
  	свойство = значение
	...

Пример:

  [core]
  	repositoryformatversion = 0
  	filemode = true
  	bare = false
  	logallrefupdates = true

====== Изменение конфигурации ======

Для установки значений свойствам конфигурации можно использовать файлы конфигураций, либо воспользоваться утилитой ''git config''.

===== Файлы =====

Для изменения файлов конфигурации необходимо либо самостоятельно найти и открыть эти файлы на редактирование, либо использовать следующие команды:

  * ''%%git config --global -e%%'' - открыть глобальный файл конфигураций
  * ''%%git config --system -e%%'' - открыть пользовательский файл конфигураций
  * ''%%git config --local  -e%%'' - открыть файл конфигураций репозитория

После чего можно внести изменения в файлы.

Так же возможно указать новый файл, который будет использоваться в качестве файла конфигрурации данного уровня в системе. Для этого используются команды:

  * ''%%git config --global --file файл%%'' - задать глобальный файл конфигураций
  * ''%%git config --system --file файл%%'' - задать пользовательский файл конфигураций
  * ''%%git config --local  --file файл%%'' - задать файл конфигураций репозитория

===== Утилита =====

Утилита 'git config' позволяет изменить конкретные свойства в файлах конфигураций. Для этого используются следующие команды:

  * **Добавление и изменение**:
    * ''%%git config [--global|--system|--local] раздел.свойство значение%%'' - добавление или изменение свойства
  * **Получение значений**:
    * ''%%git config [--global|--system|--local] раздел.свойство%%'' - получение значения свойства
    * ''%%git config [--global|--system|--local] -l%%'' - получение списка значений всех свойств
  * **Удаление**:
    * ''%%git config [--global|--system|--local] --unset раздел.свойство%%'' - удаление данного свойства
    * ''%%git config [--global|--system|--local] --remove-section раздел%%'' - удаление данного раздела

====== Свойства конфигурации ======

Ниже приведены некоторые свойства конфигурации Git:

  * ''user''
    * ''user.name'' - имя пользователя репозитория
    * ''user.email'' - адрес электронной почты пользователя репозитория
  * ''core''
    * ''core.editor'' - редактор по умолчанию
    * ''core.pager'' - пейджер, используемый для постраничного отображения (на пример ''more'')
    * ''core.excludesfile'' - файл, используемый для исключений (аналогично .gitignore), но относящийся к пользователю или системе в целом
  * ''commit''
    * ''commit.template'' - адрес файла, содержимое которого будет использоваться как шаблон описания коммитов
    * ''commit.status'' (true|false) - включать ли вывод команды git status в описание комита
  * ''status''
    * ''status.showUntrackedFiles'' - режим ключа -u (no - не отображать неотслеживаемые файлы; normal - отображать каталог с неотслеживаемыми файлами; all - отображать каждый неотслеживаемый файл индивидуально)
    * ''status.relativePaths'' (true|false) - если true, то адреса файлов, выводимых командой git status, будут исчисляться относительно текущего каталога, иначе относительно корневого каталога проекта
  * ''merge''
    * ''merge.tool'' - утилита сравнения (diff) файлов
  * ''color''
    * ''color.ui'' (true|false) - использование раскраски вывода Git
  * ''credential''
    * ''%%credential.helper "cache --timeout=сек"%%'' - использовать кэширование пароля на заданное время
  * ''alias''
    * ''alias.псевдоним'' - указание псевдонимов для команд Git
  * ''web''
    * ''web.browser'' - браузер, используемый для отображения веб-страниц

====== Игнорирование файлов репозиторием ======

Если необходимо определить некоторые файлы или каталоги в репозитории, которые не должны учитываться Git, необходимо создать файл с именем ''.gitignore'' в корневом каталоге проекта, находящегося под версионным контролем. Данный файл может содержать следующие команды:

  * ''#...'' - комментарий. Все от данного символа до конца строки не учитывается
  * glob-шаблоны - используются для определения имен игнорируемых файлов
  * ''/файл'' - файлы или каталоги, находящиеся в том же каталоге, что и ''.gitignore''
  * ''каталог/'' - указание на "каталог". Весь каталог будет проигнорирован
  * ''%%.../**/...%%'' - рекурсивно все подкаталоги
  * ''!команда'' - инверсия "команды", все затрагиваемые ей файлы и каталоги не будут проигнорированы

Пример:

  # Игнорирование всех файлов с расширением swp
  *.swp
  # Игнорирование всех файлов с расширением cpp во всех каталогах tests
  tests/*.cpp
  # Игнорирование файлов *.log в каталоге logs текущего каталога
  /logs/*.log
  # За исключением тестов
  !tests/Test*.cpp
  # Игнорирование каталога .idea и всех вложенных файлов и каталогов
  .idea/
  # Игнорирование файлов с расширением h в каталоге lib рекурсивно
  lib/**/*.h

===== Исключение локальных конфигураций =====

Если текстовый редактор пользователя создает в каталоге проекта собственные каталоги и файлы, их не следует включать в файл ''.gitignore'', чтобы избежать переполнения файла излишней информацией. Это особенно актуально, когда с репозиторием работает несколько человек с различными текстовыми редакторами.

Исключить такие файлы из контроля версий можно двумя способами:

  * Файл ''.git/info/exclude''. Он аналогичен по содержимому файлу ''.gitignore'', но не коммитится, а правила его распространяются на текущий репозиторий
  * Файл, заданный свойством конфигурации ''core.excludesfile''. Он аналогичен по содержимому файлу ''.gitignore'', но правила его распространяются на все репозитории системы (ключ ''%%--system%%'') или пользователя (''%%--global%%'')
