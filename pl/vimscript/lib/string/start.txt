  * ''char2nr(символ)'' - получение кода ASCII символа;
  * ''escape(строка)'' - экранирование спецсимволов с помощью слеша;
  * ''iconv(строка, из, в)'' - преобразование кодировки строки;
  * ''join(массив, разделитель)'' - объединение элементов массива в строку с помощью разделителя;
  * ''matchend(строка, шаблон, [начало])'' - поиск последнего вхождений подстроки в строку по регулярному выражению. Функция возвращает ноль, если в строке не найдено ни одного соответствия;
  * ''matchlist(строка, шаблон, [начало])'' - поиск и возврат массива подстрок (не более 9) по регулярному выражению;
<code vim>
let str = 'test@mail.com'
echo matchlist(str, '\v(.+)\@(.+)') " ['test@mail.com', 'test', 'mail.com', '', '', '', '', '', '', '']
</code>
  * ''match(строка, шаблон, [начало])'' - поиск первого вхождений подстроки в строку по регулярному выражению. Функция возвращает ноль, если в строке не найдено ни одного соответствия;
<code vim>
let str = 'Hello world'
echo match(str, '\vw.+d') " 6
</code>
  * ''nr2char(код)'' - получение символа по коду ASCII;
  * ''split(строка, разделитель)'' - разделение строки в массив;
  * ''strchars(строка)'' - определение числа символов в строке;
  * ''stridx(строка, искомое, [начало])'' - поиск подстроки в строке (возвращается -1 если подстрока не найдена);
  * ''string(значение)'' - приведение значения к строчному типу;
  * ''strlen(строка)'' - определение длины строки в байтах;
  * ''strpart(строка, начало, [длина])'' - получение подстроки из строки. Если длина не задана, выделяется вся подстрока от позиции начала (отсчет ведется от нуля) до конца строки. 
  * ''strridx(строка, искомое, [начало])'' - поиск подстроки в строке справа налево (возвращается -1 если подстрока не найдена);
  * ''substitute(строка, шаблон, замена, флаги)'' - поиск с заменой в строке. Все аргументы функции строчные и обязательные. Из флагов доступны следущие: ''g'' - поиск с заменой всех вхождений. Если перед заменой необходимо выполнить некоторый VimScript, используется следующая строка '\=скрипт';
<code vim>
let str = 'test@mail.com'
echo substitute(str, '\v(.+)\@(.+)', 'vim@\2', '') " vim@mail.com
</code>
<code vim>
let str = 'test@mail.com'
echo substitute(str, '\v(.+)\@(.+)', '\=toupper(submatch(1)) . "@" . submatch(2)', '') " TEST@mail.com
</code>
  * ''tolower(строка)'' - приведение букв в строке к нижнему регистру;
  * ''toupper(строка)'' - приведение букв в строке к верхнему регистру.

~~DISQUS~~
