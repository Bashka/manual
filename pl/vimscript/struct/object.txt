====== Прототипная реализация классов ======
Благодаря тому, что [[.:function|функции]] могут хранится в элементах словаря, а из их тела можно получить доступ к словорю в целом, VimScript позволяет реализовать объектную-ориентацию. Стандартных средств для определения класса в VimScript нет, но можно использовать прототипную модель, путем клонирования объекта-прототипа для создания новых объектов того же типа:
<code vim>
let prototype = {'prop': 1}
function prototype.getProp() dict
    return self.prop
endfunction

let objA = deepcopy(prototype)
let objB = deepcopy(prototype)

let objA.prop = 2 

echo objA.getProp() " 2
echo objB.getProp() " 1 - то есть то, что было в прототипе
</code>
Здесь функция ''deepcopy'' копирует значения элементов прототипа в новый объект, а так же копирует ссылки на методы прототипа, что позволяет экономить память и не дублировать методы для каждого объекта.
