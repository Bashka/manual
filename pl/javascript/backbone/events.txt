====== Миксин ======
Миксин ''Backbone.Events'' содержит методы, позволяющие выбрасывать и отслеживать события объекта. Для использования этой логики достаточно смешать этот миксин с любым объектом:

<code javascript>
var obj = {};
undescore.extend(obj, Backbone.Events);
obj.on('myEvent', function(){
  console.log('Событие выброшено');
});
obj.trigger('myEvent');
</code>

====== Методы ======
Миксин добавляет следующие методы:

  * ''on(string событие, function обработчик, [object контекст])'' - установить функцию-обработчик события. Именем события может выступать любая строка. Имя ''all'' используется для обработки всех событий вызываемого объекта. Пространство имен события отделяется символом '':''. Так же можно установить обработчик для нескольких событий, если их имена разделены пробелом;
<code javascript>
obj.on('change:title change:text', function(){
  ...
}, this);
</code>
  * ''off([string событие], [function обработчик], [object контекст])'' - удалить функцию-обработчик события. Если не указан контекст, будет удален обработчик без учета контекста. Если не указан обработчик, будут удалены все обработчики указанного события. Если не указано событие, будут удалены все обработчики событий вызываемого объекта;
  * ''trigger([string событие], [аргументы])'' - выбросить событие. Все дополнительные параметры функции будут переданы в обработчик;
<code javascript>
obj.on('myEvent', function(a, b){
  console.log(a); // 1
  console.log(b); // 2
});
obj.trigger('myEvent', 1, 2);
</code>
  * ''once(string событие, function обработчик, [object контекст])'' - аналогично методу ''on'', но обработчик сработает только один раз при возникновении события.

====== Стандартные события ======
В ''Backbone'' часто используются следующие события:

  * Коллекции:
    * ''add (модель, коллекция, опции)'' - добавление модели в коллекцию;
    * ''remove (модель, коллекция, опции)'' - удаление модели из коллекции;
    * ''reset (коллекция, опции)'' - замена содержимого коллекции;
    * ''sort (коллекция, опции)'' - сортировка коллекции;
  * Модели:
    * ''change (модель, опции)'' - изменение свойства модели;
    * ''change:свойство (модель, значение, опции)'' - изменение конкретного свойства модели;
<code javascript>
obj.on('change:x', function(model, value, options){
  console.log(model); // obj
  console.log(value); // 2
  console.log(options); // {}
  });
obj.set('x', 2);
</code>
    * ''destroy (модель, опции)'' - уничтожение модели;
    * ''request (модель, xhr, опции)'' - запрос на сервер от модели;
    * ''sync (модель, ответ, опции)'' - успешная синхронизация модели с сервером;
    * ''error (модель, xhr, опции)'' - ошибка синхронизации модели с сервером;
    * ''invalid (модель, ошибка, опции)'' - ошибка валидации модели;
  * Роутеры:
    * ''route (роутер, путь, опции)'' - любой роут нашел соответствие;
    * ''route:имя (параметры)'' - конкретный роут нашел соответствие;
  * Разное:
    * ''all'' - любое событие.

~~DISQUS~~
