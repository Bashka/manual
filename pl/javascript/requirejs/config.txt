====== Конфигурация ======
Конфигурируется RequireJS с помощью свойства ''requirejs.config''. Оно включает следующие разделы:

  * ''baseUrl'' - адрес каталога, используемого по умолчанию при загрузке модулей. Адрес указывается относительно корня проекта (''/'') и не должен содержать начального и конечного слешей;
  * ''paths'' - псевдонимы каталогов проекта и подключаемых модулей. В качестве ключей этого словаря выступают псевдонимы, а в качестве значений - адреса каталогов и модулей относительно адреса, заданного в разделе ''baseUrl'';
  * ''shim'' - описания модулей, структура которых не позволяет получить их характеристики автоматически. В качестве ключей этого словаря выступают имена модулей, а в качестве значений - следующие свойства:
    * ''deps'' - массив имен модулей, от которых зависит данный модуль. При подключении модуля с объявленными зависимостями, они будут подключены автоматически;
    * ''exports'' - имя переменной, экспортируемое в глобальное пространство имен модулем.

====== Пример ======
Структура проекта:
<code>
scripts/
  lib/
    underscore.js
    backbone.js
  app/
    Task.js
  main.js
</code>

<file javascript main.js>
requirejs.config({
  baseUrl: 'scripts/lib', // По умолчанию модули загружаются из каталога scripts/lib.
  paths: {
    app: '../app', // Модули проекта находятся по адресу scripts/app. Этот путь позволяет сократить их имена приставкой app.
  },
  shim: {
    backbone: {
      deps: ['underscore'], // Библиотека Backbone зависит от Underscore.
      exports: 'Backbone' // Она экспортирует переменную Backbone.
    },
    underscore: {
      exports: '_'
    }
  }
});

requirejs(['backbone', 'app/Task'], function(bb, Task){
  /*
  Подключенный класс из файла app/Task.js теперь доступен в переменной Task,
  а библиотека Backbone экспортирована в глобальное пространство имен как Backbone.
  */
});
</file>

~~DISQUS~~
