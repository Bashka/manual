====== Объявление ======
Функции в Bash так же называются "подпрограммами". Это связано с тем, что вызываются они аналогично внешним утилитам.

Для объявления функции используется запись:
<code bash>
function имя {
}
</code>
Объявленные функции переопределяют существующие внешние утилиты.

====== Вызов ======
Вызов функций аналогичен вызову внешних утилит, как и передача им параметров.
<code bash>
имя параметры
</code>
Доступ к параметрам в функции осуществляется так же, как и для внешней утилиты (с помощью ''$1'', ''$2'' и т.д.). Переменная ''$0'' в функции хранит имя утилиты (файла), в которой эта функция объявлена.

По умолчанию функции оперируют глобальными переменными. Создать локальную переменную в функции можно с помощью команды ''local имя=значение''.
<code bash>
var=1
function myFun {
  globVar=1
  local locVar=2
}
echo $globVar # Вывод '1'
echo $locVar # Вывод ''
</code>
Функции, как и внешние утилиты, можно вызывать [[.:utilities#Последовательный вызов|последовательно]]. 

====== Параметры ======
Параметры функций обрабатываются аналогично [[.:utilities#Параметры|параметрам внешних утилит]]. 

====== Возвращаемое значение ======
Функции Bash, как у внешние утилиты, могут возвращать целочисленное, положительное число, меньшее 255, описывающее результат обработки функции (удачное завершение или ошибка).

По умолчанию функция возвращает значение, полученное из последней используемой команды. Если необходимо вернуть конкретное значение, используется команда ''return число'':
<code bash>
function myFun {
  ...
  return 0
}
</code>
