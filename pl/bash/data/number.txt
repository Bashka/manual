====== Литералы ======
Числа на языке Bash представляются в виде строк, которые в зависимости от контекста могут быть интерпретированны в целые или дробные числовые литералы.
  * Целые числа (1, 0, -5) - данные, содержащие только числа и, возможно, знак минус для обозначения отрицательных чисел
  * Дробные числа (2.7) - данные, содержащие только числа целой и дробной части, разделенные точкой и, возможно, знак минуса для обозначения отрицательных чисел

====== Операторы ======
Большенство основных математических операторов над целыми числами реализуется с помощью встроенной команды ''expr'', которая вычисляет выражение и возвращает результат в виде строки.
<code bash>
a=5
b=`expr ( 3 - 1 ) \* $a`
echo $b
</code>
Команда ''expr'' поддерживает следующие математические операторы:
  * ''+'' - сложение;
  * ''-'' - вычитание;
  * ''\*'' - умножение (обязательно должен быть экранирован);
  * ''/'' - деление;
  * ''%'' - остаток от деления.
Bash не поддерживает вычисления над числами с плавающей точкой.

В Bash определен псевдоним команды ''expr'' для математических операций, который называется ''$(( ... ))''. Он возвращает результат работы исходной команды:
<code bash>
x=2
y=4
z=$(( $x * $y )) # Аналог z=`expr $x \* $y`
</code>
В этом случае экранирования спецсимволов не требуется.

Другим решением является утилита ''bc'', которая ожидает выражение в потоке ввода и передает результат в выходной поток. Данная утилита работает с дробными числами.
