====== Литералы ======
В Bash принято следующее соглашение относительно логического типа данных: все числа, отличные от нуля соответствуют ''False'', а ноль соответствует ''True''. Это связано с тем, что при удачном завершении работы программа возвращает ноль, и отличное от нуля значение в противном случае.

====== Операторы ======
Для сравнения данных в Bash используется утилита ''test'', которая принимает следующие параметры:
  * Операторы И, ИЛИ, НЕ: 
    * ''test выражениеA -a выражениеB'' - оператор И;
    * ''test выражениеA -o выражениеB'' - оператор ИЛИ;
    * ''test ! выражениеA'' - оператор НЕ; 
  * Операторы для работы с числами:
    * ''test числоA -eq числоB'' - "числоA" равно "числуB";
    * ''test числоA -ne числоB'' - "числоA" не равно "числуB";
    * ''test числоA -lt числоB'' - "числоA" меньше "числаB";
    * ''test числоA -le числоB'' - "числоA" меньше или равно "числуB";
    * ''test числоA -gt числоB'' - "числоA" больше "числаB";
    * ''test числоA -ge числоB'' - "числоA" больше или равно "числуB".
  * Операторы для работы со строками:
    * ''test строкаA = строкаB''- "строкаA" эквивалентна "строкеB";
    * ''test строкаA != строкаB'' - "строкаA" не эквивалентна "строкеB";
    * ''test строкаA > строкаB''- "строкаA" больше "строкиB";
    * ''test строкаA >= строкаB'' - "строкаA" больше или эквивалентна "строкеB";
    * ''test строкаA < строкаB''- "строкаA" меньше "строкиB";
    * ''%%test строкаA <= строкаB%%'' - "строкаA" меньше или эквивалентна "строкеB";
    * ''test -n строка'' - "строка" не пуста;
    * ''test -z строка'' - "строка" пуста.
  * Операторы для работы с файловой системой:
    * ''test -e файл'' - "файл" существует;
    * ''test -s файл'' - "файл" не пуст;
    * ''test -d файл'' - "файл" существует и является каталогом;
    * ''test -f файл'' - "файл" существует и является обычным файлом;
    * ''test -r файл'' - текущий пользователь имеет право читать "файл";
    * ''test -w файл'' - текущий пользователь имеет право писать в "файл";
    * ''test -x файл'' - текущий пользователь имеет право исполнять "файл".
<code bash>
if test 5 -eq 5; then
  echo 'Yes'
else
  echo 'No'
fi
</code>

Другим, более C-подобным способом сравнения является использование команды ''expr'' внутри ''test''.
<code bash>
a='Hello'
b='world'
if test `expr "$a" = "$b"` -eq 1; then
  echo 'Yes'
else
  echo 'No'
fi
</code>
Важно помнить, что команда ''expr'' при сравнении возвращает ноль в случае ложности выражения и отличную от нуля цифру при его истинности (в разрез принятому в Bash обозначению). В связи с этим результат работы команды проверяется с помощью утилиты ''test''.

Другой вариант, без использования ''test'' (сокрытие потока вывода):
<code bash>
if expr "$a" = "$b" > /dev/null; then
  echo 'Yes'
else
  echo 'No'
fi
</code>

Команда ''expr'' поддерживает следующие логические операторы:
  * ''='' - равно;
  * ''!='' - не равно;
  * ''\>'' - больше;
  * ''\>='' - больше или равно;
  * ''\<'' - меньше;
  * ''%%\<=%%'' - меньше или равно;
Команда использует числовое сравнение, если оба операнда в выражении являются числами, иначе используется сравнение строк.
