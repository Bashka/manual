====== Семантика ======

===== ReaderInterface =====

Интерфейс ''ReaderInterface'' описывает классы, реализующие логику преобразования данных различных типов в массив, пригодный для передачи экземпляру [[.:config|Config]].

  * ''fromString'' - преобразует строку в массив конфигурации
  * ''fromFile'' - преобразует данные файла в массив конфигурации

====== Реализация ======

===== Ini =====

<code ini>
[core]
author=zf2
</code>

<code php>
$reader = new Zend\Config\Reader\Ini;
$config = new Zend\Config\Config($reader->fromFile('config.ini'));
echo $config->core->author; // "zf2"
</code>

===== Xml =====

<code xml>
<?xml version="1.0" encoding="utf-8"?>
<config>
  <core>
    <author>zf2</author>
  </core>
</config>
</code>

<code php>
$reader = new Zend\Config\Reader\Xml;
$config = new Zend\Config\Config($reader->fromFile('config.xml'));
echo $config->core->author; // "zf2"
</code>

===== Json =====

<code javascript>
{
  "core": {
    "author": "zf2"
  }
}
</code>

<code php>
$reader = new Zend\Config\Reader\Json;
$config = new Zend\Config\Config($reader->fromFile('config.json'));
echo $config->core->author; // "zf2"
</code>

===== Yaml =====

<code yaml>
core:
  author: zf2
</code>

<code php>
$reader = new Zend\Config\Reader\Yaml;
$config = new Zend\Config\Config($reader->fromFile('config.yml'));
echo $config->core->author; // "zf2"
</code>

===== JavaProperties =====

<code java>
core.author:zf2
</code>

<code php>
$reader = new Zend\Config\Reader\JavaProperties;
$config = new Zend\Config\Config($reader->fromFile('config.properties'));
echo $config->core->author; // "zf2"
</code>

~~DISQUS~~
