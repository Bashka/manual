====== Семантика ======

===== ModelInterface =====

Интерфейс ''ModelInterface'' описывает контейнер (модель представления), агрегирующий переменные, вспомогательные функции, опции и вложенные контейнеры, а так же содержащий информацию о шаблоне, который должен использоваться для рендеринга этих данных. Интерфейс расширяет ''Countable'' и ''IteratorAggregate'', используя их семантику для работы с дочерними моделями представления.

  * ''setOptions/getOptions'' - задает и получает опции модели
  * ''setOption/getOption'' - задает и получает конкретную опцию модели
  * ''setVariables/getVariables'' - задает и получает переменные модели
  * ''setVariable/getVariable'' - задает и получает конкретную переменную модели
  * ''setTemplate/getTemplate'' - задает и получает шаблон, используемый для рендеринга модели
  * ''addChild/getChildren'' - добавляет и получает дочернюю модель
  * ''hasChildren'' - проверяет наличие дочерних моделей
  * ''setCaptureTo/captureTo'' - определяет и предоставляет имя переменной, в которой будет храниться данная модель в контексте родительской модели

===== ClearableModelInterface =====

Интерфейс ''ClearableModelInterface'' описывает модель представления, переменные, опции и дочерние модели которой могут быть отчищены.

  * ''clearChildren'' - удаляет дочерние модели
  * ''clearOptions'' - удаляет опции
  * ''clearVariables'' - удаляет переменные

===== RetrievableChildrenInterface =====

Интерфейс ''RetrievableChildrenInterface'' описывает модель представления, предоставляющая свои дочерние модели по имени переменной, в которой они содержаться.

  * ''getChildrenByCaptureTo'' - предоставляет дочернюю модель, содержащуюся в указанной переменной 

====== Реализация ======

===== ViewModel =====

Класс ''ViewModel'' реализует интерфейсы ''ModelInterface'', ''ClearableModelInterface'' и ''RetrievableChildrenInterface''.

Данный класс расширяют следующие:

  * ''JsonModel'' - представляет модель с данными, пригодными для сериализации в JSON
  * ''ConsoleModel'' - представляет модель с данными, пригодными для отображения в консоли


~~DISQUS~~
