[[:start|Главная]] > [[:ЯП:ZF2|Zend Framework 2]] > Компоненты фреймворка > [[:ЯП:ZF2:lib:ModuleManager]] > **Module**

===== Структура модуля =====

[[http://framework.zend.com/manual/current/en/modules/zend.module-manager.intro.html|Модуль]] в ZF2 это совокупность решений, реализующих некоторые, связанные задачи.

Обычно модуль располагается в каталоге, имя которого соответствует имени модуля (здесь в качестве примера используется модуль с именем ''MyModule'') и включает следующие файлы:

<code>
...
  MyModule/
    Module.php
    config/
      module.config.php
    src/
      MyModule/
        Controller/
        Model/
        Service/
    view/
      mymodule/
        имяКонтроллера/
          действиеКонтроллера.phtml
    test/
      phpunit.xml
      bootstrap.php
      MyModule/
    autoload_classmap.php
    autoload_function.php
    autoload_register.php
</code>

Естественно структура модуля может быть совершенно любой, главное чтобы файл ''Module.php'' был в корневом каталоге модуля. Все остальные каталоги и компоненты модуля определены в файле конфигурации модуля, потому могут располагаться где угодно в каталоге модуля.

Для загрузки модуля используется конфигурация системы и служба [[:ЯП:ZF2:lib:ModuleManager]].

===== Module.php =====

Класс [[http://framework.zend.com/manual/current/en/modules/zend.module-manager.module-class.html|Module]], располагаемый в файле ''Module.php'' используется при загрузке модуля как средство инициализации. Этот класс включает методы, отвечающие за предоставление конфигурации модуля, а так же за установку слушателей событий системы и начальную инициализацию.

Обычно класс имеет следующую структуру:

<file php Module.php>
namespace MyModule;

class Module{
  public function getAutoloaderConfig(){
    return [
      // Автозагрузка с помощью карты классов, расположенной в файле autoload_classmap.php
      'Zend\Loader\ClassMapAutoloader' => [
        __DIR__ . '/autoload_classmap.php',
      ],
      // Автозагрузка с помощью поиска класса в файловой системе по его имени
      'Zend\Loader\StandardAutoloader' => [
        'namespaces' => [
          __NAMESPACE__ => __DIR__ . '/src/' . __NAMESPACE__,
        ],
      ],
    ];
  }

  public function getConfig(){
    // Конфигурация модуля возвращается файлом config/module.config.php
    return include __DIR__ . '/config/module.config.php';
  }
}
</file>

Данный класс может включать следующие методы:

  * init - вызывается сразу после загрузки модуля и служит для "легких" задач, таких как установка слушателей событий системы. Метод принимает объект класса ''ModuleManager'';
  * onBootstrap - вызывается после полной загрузки системы. Метод принимает объект класса ''Event'', представляющий событие загрузки;
  * getConfig - метод должен возвращать массив конфигурации модуля;
  * getAutoloaderConfig - метод должен возвращать массив конфигурации автозагрузчика модуля.

===== Автозагрузка =====

==== autoload_classmap.php ====

Данный файл может возвращать массив, используемый для конфигурирования [[:ЯП:ZF2:lib:Loader:ClassMapAutoloader]]. Если вернуться к конфигурации автозагрузчика классов, представленной в примере выше (метод ''getAutoloaderConfig'' класса ''Module''), то можно заметить, что этот файл будет использоваться в первую очередь при поиске файла, содержащего целевой класс. Если в файле не будет найдено соответствие, будет использован стандартный загрузчик классов (на основе полного имени класса).

Этот файл может возвращать и пустой массив, в этом случае автозагрузка будет выполняться без использования карты классов.
==== autoload_function.php ====

todo

==== autoload_register.php ====

todo

===== Конфигурация =====

Файлом конфигурации модуля обычно является ''config/module.config.php'', но на деле это может быть любой файл, возвращающий массив конфигурации модуля.

<file php module.config.php>
return [
  'controllers' => [
    'invokables' => [
      'MyModule\Controller\Index' => 'MyModule\Controller\IndexController',
    ],
  ],
  'view_manager' => [
    'template_path_stack' => [
      'index' => __DIR__ . '/../view',
    ],
  ],
];
</file>

Так же возможно задать конфигурацию модуля прямо в методе ''getConfig'' класса ''Module'', а не использовать для этого файл конфигурации. Так или иначе, модуль может быть сконфигурирован с помощью массива, включающего следующие возможные опции:

  * controllers - контроллеры, определенные в модуле;
  * service_manager - конфигурация [[:ЯП:ZF2:lib:ServiceManager]];
  * view_manager - конфигурация [[:ЯП:ZF2:lib:ViewManager]];
  * router - конфигурация [[:ЯП:ZF2:lib:Mvc:Router]].

===== Бизнес-логика =====

Сущности (Entity), а так же вся бизнес-логика (слой домена) модуля располагается в каталоге ''src''. Обычно все классы в нем сгруппированы в следующих подкаталогах:

  * Entity - сущности модуля;
  * Db - средства для взаимодействия с БД;
  * Model - бизнес-логика модуля;
  * Controller - контроллеры модуля;
  * Service - службы модуля.

Эти классы могут быть реализованы как угодно, единственным условием является то, что они должны располагаться в пространстве имен модуля (на пример ''namespace MyModule\Controller\IndexController'').

===== Шаблоны =====

todo

===== Тесты =====

todo