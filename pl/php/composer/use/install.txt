===== Разрешение зависимостей =====
Для разрешения зависимостей с помощью Composer достаточно выполнить следующую команду в каталоге с файлом `composer.json`:

<code bash>
php composer.phar install
</code>

После инсталляции, Composer поместит все зависимости в каталог `vendor`, а так же создаст два файла:

  * composer.lock - данный файл содержит информацию об установленных зависимостях с закреплением версий. Данный файл так же используется Composer при разрешении зависимостей (если он присутствует) и позволяет повторить конфигурацию на public сервере (установить в точности те же пакеты). Если файл ''composer.json'' будет изменен после создания данного файла, установить зависимости с его помощью будет уже нельзя, в этом случае необходимо обновить файл ''composer.lock'';
  * vendor/autoload.php - PHP скрипт, реализующий автозагрузку классов всех установленных пакетов. В проекте достаточно подключить только этот скрипт для использования всех классов зависимостей.

<code php>
<?php
require_once 'vendor/autoload.php';
use MyLib/Log;

Log::info('Hello world');
</code>

Выполнение данной команды в каталоге с файлом ''composer.lock'' приведет к установке пакетов с теми версиями, которые указаны в ''composer.lock'' файле.

====== Продакшен ======

Для разрешения зависимостей на продакшен-сервере необходимо исключить dev-зависимости. Делается это с помощью следующей команды:

<code bash>
php composer.phar install --no-dev
</code>

===== Установка проекта =====

Многие Composer пакеты можно установить в виде проектов. Это означает, что пакет будет помещен в заданный каталог с разрешением всех его зависимостей так, что его можно сразу начать использовать. Для установки проекта используется следующая команда:

<code bash>
php composer.phar create-project издатель/пакет целевойКаталог
</code>

Важно, чтобы целевой каталог был пуст.

Пример установки zendframework/skeleton-application:

<code bash>
php composer.phar create-project zendframework/skeleton-application /var/www/myProj
</code>

~~DISQUS~~
